{"version":3,"sources":["reducers/notificationReducer.js","components/Blog.js","hooks/index.js","components/BlogForm.js","services/login.js","services/blogs.js","reducers/loginReducer.js","components/LoginForm.js","components/Logout.js","components/Notification.js","components/Togglable.js","reducers/blogReducer.js","App.js","store.js","index.js"],"names":["messageTimeout","Blog","blog","handleLike","handleDelete","user","useState","visible","setVisible","toggle","enlarged","display","paddingTop","paddingLeft","border","borderWidth","marginBottom","shrunken","className","onClick","style","title","author","href","url","id","likes","likedBlog","length","blogs","username","window","confirm","useField","type","value","setValue","onChange","event","target","onSubmit","BlogForm","createBlog","preventDefault","login","credentials","a","axios","post","response","data","token","getAll","get","then","create","newBlog","config","headers","Authorization","update","put","setToken","newToken","remove","delete","resetToken","givenObj","dispatch","loginService","console","log","localStorage","setItem","JSON","stringify","blogService","reducer","state","action","notify","message","time","clearTimeout","setTimeout","LoginForm","useDispatch","password","handleLogin","reset","exception","Logout","name","handleLogout","Notification","useSelector","notifications","Togglable","buttonLabel","children","hideWhenVisible","showWhenVisible","toggleVisibility","returnedBlog","likeBlog","removeBlog","concat","map","b","filter","App","useEffect","userFromLocalStorage","loggedUserJSON","getItem","parse","handleBlogSubmit","obj","error","handleLiking","handleDeleting","removeItem","sort","key","combineReducers","notificationReducer","blogReducer","loginReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af40b334.chunk.js","sourcesContent":["const reducer = (state = null, action) => {\n  switch(action.type) {\n  case 'ADD_MESSAGE':\n    return action.data.message\n  case 'CLEAR_MESSAGE':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const notify = (message, time) => {\n  return dispatch => {\n    dispatch({\n      type: 'ADD_MESSAGE',\n      data: { message }\n    })\n    clearTimeout(messageTimeout)\n    messageTimeout = setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_MESSAGE'\n      })\n    }, time * 1000)\n  }\n}\n\nlet messageTimeout\n\nexport default reducer","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react'\r\n\r\nconst Blog = ({ blog, handleLike, handleDelete, user }) => {\r\n  const [visible, setVisible] = useState(false)\r\n  const toggle = () => setVisible(!visible)\r\n  const enlarged = { display: visible ? '' : 'none',  paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5 }\r\n  const shrunken = { display: visible ? 'none' : '' }\r\n  const likePushed = () => {\r\n    const likedBlog = { ...blog, likes: blog.likes + 1 }\r\n    handleLike(likedBlog)\r\n  }\r\n  const deletePushed = () => {\r\n    if(window.confirm(`You are about to delete ${blog.title} by ${blog.author}`)){\r\n      handleDelete(blog)\r\n    }\r\n  }\r\n\r\n  const canDelete = () => {\r\n    if(user && blog.user){\r\n      return blog.user.length > 0 ? user.blogs === user.username : true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className='blog'>\r\n      <div className='minimized' onClick={toggle} style={shrunken}>{`${blog.title}  ${blog.author}`}</div>\r\n      <div className='maximized' style={enlarged}>\r\n        <div>{blog.title}<button onClick={toggle}>hide</button></div>\r\n        <a href={blog.url}>{blog.url}</a>\r\n        <div id='blogLikes'>likes {blog.likes} <button id='blogLikeButton' onClick={likePushed}>like</button></div>\r\n        <div>{blog.author}</div>\r\n        {canDelete() && <button id='blogDeleteButton' onClick={deletePushed}>remove</button>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const onSubmit = () => setValue('')\n\n  return {\n    type,\n    value,\n    onChange,\n    onSubmit\n  }\n\n}","import React from 'react'\nimport { useField } from '../hooks'\n\nconst BlogForm = ({ createBlog }) => {\n\n  const title = useField('text')\n  const author = useField('text')\n  const url = useField('text')\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    createBlog({\n      title: title.value,\n      author: author.value,\n      url: url.value\n    })\n    title.onSubmit()\n    author.onSubmit()\n    url.onSubmit()\n  }\n\n  return (\n    <form className='formDiv' onSubmit={handleSubmit}>\n      <div>\n        title\n        <input\n          {...title}\n        />\n      </div>\n      <div>\n        author\n        <input\n          {...author}\n        />\n      </div>\n      <div>\n        url\n        <input\n          {...url}\n        />\n      </div>\n      <button id='blogSubmitButton' type=\"submit\">submit</button>\n    </form>\n  )\n}\n\nexport default BlogForm","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst resetToken = () => token = null\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newBlog => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n}\n\nconst update = (id, newBlog) => {\n  const request = axios.put(`${baseUrl}/${id}`, newBlog)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken, remove, resetToken }","import loginService from '../services/login'\nimport blogService from '../services/blogs'\n\nconst reducer = (state = null, action) => {\n  switch(action.type){\n  case 'LOGIN':\n    return action.data\n  case 'LOGOUT':\n    return null\n\n  default:\n    return state\n  }\n}\n\nexport const loginFromLocalStorage = (userFromLocalStorage) => {\n  return dispatch => {\n    const user = JSON.parse(userFromLocalStorage)\n    blogService.setToken(user.token)\n    dispatch({ type: 'LOGIN', data: user })\n  }\n}\n\nexport const login = (givenObj) => {\n  return async dispatch => {\n    const user = await loginService.login(givenObj)\n    console.log(user)\n    window.localStorage.setItem('loggedUser', JSON.stringify(user))\n    blogService.setToken(user.token)\n    dispatch({ type: 'LOGIN', data: user })\n  }\n}\n\nexport const logout = () => {\n  return dispatch => {\n    window.localStorage.removeItem('loggedUser')\n    blogService.resetToken()\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport default reducer\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { login } from '../reducers/loginReducer'\nimport { notify } from '../reducers/notificationReducer'\nimport { useField } from '../hooks'\n\nconst LoginForm = () => {\n  const dispatch = useDispatch()\n\n  const username = useField('text')\n  const password = useField('password')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      dispatch(login({ username: username.value, password: password.value }))\n      username.reset()\n      password.reset()\n      dispatch(notify('Welcome!', 5))\n    } catch (exception) {\n      dispatch(notify('wrong username or password', 5))\n    }\n  }\n  return (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          {...username}\n        />\n      </div>\n      <div>\n        password\n        <input\n          {...password}\n        />\n      </div>\n      <button id='login-button' type=\"submit\">login</button>\n    </form>\n  )\n}\n\nexport default LoginForm","import React from 'react'\n\nconst Logout = ({ name, handleLogout }) => {\n  return (\n    <p>{name} logged in {<button onClick={handleLogout}>logout</button>}</p>\n  )\n}\n\nexport default Logout","import React from 'react'\nimport {  useSelector } from 'react-redux'\n\nconst Notification = () => {\n  const message = useSelector(state => state.notifications)\n  return (\n    <div>\n      {message && <div className='error'>{message}</div>}\n    </div>\n  )\n}\n\n\n\nexport default Notification","///copied togglable from https://fullstackopen.com/osa5/props_children_ja_proptypet\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = ({ buttonLabel, children }) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n}\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import blogService from '../services/blogs'\n\nconst reducer = (state = [], action) => {\n  switch(action.type) {\n  case 'INIT_BLOGS':\n    return action.data\n  case 'CREATE_BLOG':\n    return state.concat(action.data)\n  case 'LIKE_BLOG':\n    return state.map(b => b.id === action.data.id ? action.data : b)\n  case 'DELETE_BLOG':\n    return state.filter(b => b.id !== action.data)\n  default:\n    return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    })\n  }\n}\n\nexport const createBlog = (blog) => {\n  return async dispatch => {\n    const returnedBlog = await blogService.create(blog)\n    console.log('blog: ', returnedBlog)\n    dispatch({\n      type: 'CREATE_BLOG',\n      data: returnedBlog\n    })\n  }\n}\n\nexport const likeBlog = (blog) => {\n  return async dispatch => {\n    const returnedBlog = await blogService.update(blog.id, blog)\n    dispatch({\n      type: 'LIKE_BLOG',\n      data: returnedBlog\n    })\n  }\n}\n\nexport const removeBlog = (id) => {\n  return async dispatch => {\n    await blogService.remove(id)\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: id\n    })\n  }\n}\n\nexport default reducer","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport LoginForm from './components/LoginForm'\nimport Logout from './components/Logout'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport { notify } from './reducers/notificationReducer'\nimport { initializeBlogs, createBlog, likeBlog, removeBlog } from './reducers/blogReducer'\nimport { loginFromLocalStorage, logout } from './reducers/loginReducer'\n\n\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const blogs = useSelector(state => state.blogs)\n  const user = useSelector(state => state.login)\n\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if(loggedUserJSON){\n      dispatch(loginFromLocalStorage(loggedUserJSON))\n    }\n  },[dispatch])\n\n  const handleBlogSubmit = async (obj) => {\n    try{\n      dispatch(createBlog(obj))\n      dispatch(notify(`a new blog ${obj.title} by ${obj.author} added`, 5))\n    } catch(error){\n      dispatch(notify('there was a problem, could not add blog', 5))\n    }\n  }\n\n  const handleLiking = async (obj) => {\n    try{\n      dispatch(likeBlog(obj))\n      dispatch(notify(`${obj.title} + 1 like!`, 5))\n    } catch(error){\n      dispatch(notify(`there was error liking blog ${obj.title}`, 5))\n    }\n  }\n\n  const handleDeleting = async (obj) => {\n    try{\n      dispatch(removeBlog(obj.id))\n      dispatch(notify(`${obj.title} deleted!`, 5))\n    } catch(error){\n      dispatch(notify(`an error occured when deleting ${obj.title}`, 5))\n    }\n  }\n\n  const logoutPushed = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n\n      <Notification />\n\n      {!user\n        ? (\n\n          <LoginForm\n          />\n        )\n        : (\n          <>\n            <Logout name={user.name} handleLogout={logoutPushed}/>\n            <Togglable buttonLabel='new blog'>\n              <BlogForm\n                createBlog={handleBlogSubmit}\n              />\n            </Togglable>\n            <div id=\"blogs\">\n              {blogs.sort((a, b) => b.likes - a.likes).map((blog) =>\n                <Blog\n                  key={blog.id}\n                  blog={blog}\n                  handleLike={handleLiking}\n                  handleDelete={handleDeleting}\n                  user={user}\n                />\n              )}\n            </div>\n          </>\n        )}\n    </div>\n  )\n}\n\nexport default App\n","import thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\n\nimport notificationReducer from './reducers/notificationReducer'\nimport blogReducer from './reducers/blogReducer'\nimport loginReducer from './reducers/loginReducer'\n\nconst reducer = combineReducers({\n  notifications: notificationReducer,\n  blogs: blogReducer,\n  login: loginReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'))\n"],"sourceRoot":""}